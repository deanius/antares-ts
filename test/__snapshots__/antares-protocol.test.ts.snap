// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AntaresProtocol instance methods #action$ - the action stream contains an entry on {results} for each synchronous renderer 1`] = `
Object {
  "action": Object {
    "type": "any",
  },
  "results": Map {
    "rememberMyName" => "syncReturnValue",
  },
  "resultsAsync": Map {},
}
`;

exports[`AntaresProtocol instance methods #action$ - the action stream exposes each processed action 1`] = `
Array [
  Object {
    "type": "rando 1",
  },
  Object {
    "type": "rando 2",
  },
]
`;

exports[`AntaresProtocol instance methods #subscribeRenderer accepts { name:String } on the config object 1`] = `
Array [
  "JohnnyNull",
]
`;

exports[`AntaresProtocol instance methods #subscribeRenderer async (batch) mode happy path will send returned actions back through #process 1`] = `
Array [
  Object {
    "type": "any",
  },
  Object {
    "type": "consequentialAction",
  },
]
`;

exports[`AntaresProtocol instance methods #subscribeRenderer defaults naming a renderer 'renderer_N' 1`] = `
Array [
  "JohnnyNull",
  "renderer_2",
  "JohnnyFive",
]
`;

exports[`AntaresProtocol instance methods #subscribeRenderer synchronous (online) mode a renderer error propogates up to the caller of #process 1`] = `"unconditionally"`;
